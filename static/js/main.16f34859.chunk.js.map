{"version":3,"sources":["components/Header.js","components/NavBar.js","components/OneTicket.js","components/Tickets.js","App.js","serviceWorker.js","index.js"],"names":["Header","_ref","budget","react_default","a","createElement","NavBar","click","lotteryTicketPrice","className","onClick","OneTicket","coupon","animation","numberOfTicket","numbers","Object","toConsumableArray","length","arr","_loop","i","match","find","el","div","key","push","data-aos","sort","b","join","Tickets","coupons","fadeAnimations","Math","floor","random","table","map","number","components_OneTicket","settings","price","total","App","state","tableOfResult","handleDrawingButton","amountOfCoupons","z","_this","drawing","setState","result","oneDraw","AOS","init","duration","Fragment","src_components_Header","src_components_NavBar","this","components_Tickets","Component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qSAiBeA,eAdA,SAAAC,GAAgB,IAAbC,EAAaD,EAAbC,OAChB,OACEC,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,+BAA2B,IAC3BF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wCACsBF,EAAAC,EAAAC,cAAA,kBAAUH,EAAV,KADtB,eAEU,KACL,KACA,OCGEI,SAZA,SAAAL,GAAmC,IAAhCM,EAAgCN,EAAhCM,MAAOC,EAAyBP,EAAzBO,mBACvB,OACEL,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACbN,EAAAC,EAAAC,cAAA,4BADF,IAC4BF,EAAAC,EAAAC,cAAA,UAAQK,QAASH,GAAjB,eAC1BJ,EAAAC,EAAAC,cAAA,kCACiBG,EADjB,qBC0BSG,EAhCG,SAAAV,GAA2C,IAAxCW,EAAwCX,EAAxCW,OAAQC,EAAgCZ,EAAhCY,UAAWC,EAAqBb,EAArBa,eAChCC,EAAOC,OAAAC,EAAA,EAAAD,CAAOJ,GAEpB,GAAIG,EAAQG,OAAQ,CAElB,IADA,IAAIC,EAAM,GADQC,EAAA,SAETC,GACP,IAAIC,EAAQP,EAAQQ,KAAK,SAAAC,GAAE,OAAIA,IAAOH,IAClCI,EACFJ,IAAMC,EACJnB,EAAAC,EAAAC,cAAA,OAAKqB,IAAKL,EAAGZ,UAAU,eACpBY,GAGHlB,EAAAC,EAAAC,cAAA,OAAKqB,IAAKL,GAAV,IAAeA,EAAf,KAEJF,EAAIQ,KAAKF,IAVFJ,EAAI,EAAGA,EAAI,GAAIA,IAAKD,EAApBC,GAaT,OACElB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,aAAamB,WAAUf,GACpCV,EAAAC,EAAAC,cAAA,WACCc,EACDhB,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,YAAOU,EAAQc,KAAK,SAACzB,EAAG0B,GAAJ,OAAU1B,EAAI0B,IAAGC,KAAK,OAC1C5B,EAAAC,EAAAC,cAAA,sBAAcS,IAIlB,OAAO,MCwBIkB,EAlDC,SAAA/B,GAAiB,IAAdgC,EAAchC,EAAdgC,QACXlB,EAAOC,OAAAC,EAAA,EAAAD,CAAOiB,GACdC,EAAiB,CACrB,OACA,UACA,YACA,YACA,eACA,gBACA,eACA,kBACA,iBACA,UACA,YACA,YACA,aACA,WACA,aACA,aACA,cACA,UACA,aACA,eACA,eACA,gBACA,WACA,cACA,gBACA,gBACA,kBAGErB,EAAYqB,EADDC,KAAKC,MAAMD,KAAKE,SAAWH,EAAehB,SAGzD,GAAIH,EAAQG,OAAQ,CAClB,IAAIoB,EAAQvB,EAAQwB,IAAI,SAACC,EAAQnB,GAAT,OACtBlB,EAAAC,EAAAC,cAACoC,EAAD,CACEf,IAAKL,EACLT,OAAQ4B,EACR3B,UAAWA,EACXC,eAAgBO,EAAI,MAIxB,OAAOlB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cAAc6B,GAEpC,OAAO,sBCtCLI,SAAW,CACfC,MAAO,KACPC,MAAO,KAkEMC,6MA9DbC,MAAQ,CACNC,cAAe,MAGjBC,oBAAsB,WAGpB,IAFA,IAAIC,EAAkBd,KAAKC,MAAMM,EAASE,MAAQF,EAASC,OACvDI,EAAgB,GACX1B,EAAI,EAAGA,EAAI4B,EAAiB5B,IAAK,CACxC,IAAI6B,EAAIC,EAAKC,UACbL,EAAcpB,KAAKuB,GAErBC,EAAKE,SAAS,CACZN,qBAIJK,QAAU,WACR,IAAIE,EAAS,GAKb,IANc,IAAAlC,EAAA,WAOZ,IAAImC,EAHGpB,KAAKC,MAAsB,GAAhBD,KAAKE,SAAgB,GAInCkB,IAAYD,EAAO/B,KAAK,SAAAC,GAAE,OAAIA,IAAO+B,KACvCD,EAAO3B,KAAK4B,IAHTD,EAAOpC,OAAS,GAAGE,IAM1B,OAAOkC,sFAGPE,IAAIC,KAAK,CACPC,SAAU,uCAMZ,OAASvD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuD,SAAA,KAEPxD,EAAAC,EAAAC,cACAuD,EADA,CACO1D,OACLwC,EAASE,QAJJ,IAMJzC,EAAAC,EAAAC,cACHwD,EADG,CACItD,MACLuD,KAAKd,oBAEPxC,mBACEkC,EAASC,QAIXxC,EAAAC,EAAAC,cACA0D,EADA,CACQ9B,QACN6B,KAAKhB,MAAMC,gBAjBN,YAvCKiB,aCJEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS9C,MACvB,2DCZN+C,IAASC,OAAOnE,EAAAC,EAAAC,cAACkE,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.16f34859.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = ({ budget }) => {\r\n  return (\r\n    <header>\r\n      <h1> Generator Lotto </h1>{\" \"}\r\n      <div>\r\n        <p>\r\n          Twój budżet wynosi: <strong> {budget} </strong>\r\n          złotych{\" \"}\r\n        </p>{\" \"}\r\n      </div>{\" \"}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./NavBar.css\";\r\n\r\nconst NavBar = ({ click, lotteryTicketPrice }) => {\r\n  return (\r\n    <nav className=\"navigation\">\r\n      <span> Mini lotto </span> <button onClick={click}> Losowanie </button>\r\n      <span>\r\n        Cena zakładu: {lotteryTicketPrice}\r\n        zł\r\n      </span>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nconst OneTicket = ({ coupon, animation, numberOfTicket }) => {\r\n  const numbers = [...coupon];\r\n\r\n  if (numbers.length) {\r\n    let arr = [];\r\n    for (let i = 1; i < 50; i++) {\r\n      let match = numbers.find(el => el === i);\r\n      let div =\r\n        i === match ? (\r\n          <div key={i} className=\"full_number\">\r\n            {i}\r\n          </div>\r\n        ) : (\r\n          <div key={i}> {i} </div>\r\n        );\r\n      arr.push(div);\r\n    }\r\n\r\n    return (\r\n      <div className=\"one_ticket\" data-aos={animation}>\r\n        <br />\r\n        {arr}\r\n        <span>Wylosowane liczby</span>\r\n        <span>{numbers.sort((a, b) => a - b).join(\", \")}</span>\r\n        <h3>Kupon nr {numberOfTicket}</h3>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default OneTicket;\r\n","import React from \"react\";\r\nimport OneTicket from \"./OneTicket\";\r\n\r\nconst Tickets = ({ coupons }) => {\r\n  const numbers = [...coupons];\r\n  const fadeAnimations = [\r\n    \"fade\",\r\n    \"fade-up\",\r\n    \"fade-down\",\r\n    \"fade-left\",\r\n    \"fade - right\",\r\n    \"fade-up-right\",\r\n    \"fade-up-left\",\r\n    \"fade-down-right\",\r\n    \"fade-down-left\",\r\n    \"flip-up\",\r\n    \"flip-down\",\r\n    \"flip-left\",\r\n    \"flip-right\",\r\n    \"slide-up\",\r\n    \"slide-down\",\r\n    \"slide-left\",\r\n    \"slide-right\",\r\n    \"zoom-in\",\r\n    \"zoom-in-up\",\r\n    \"zoom-in-down\",\r\n    \"zoom-in-left\",\r\n    \"zoom-in-right\",\r\n    \"zoom-out\",\r\n    \"zoom-out-up\",\r\n    \"zoom-out-down\",\r\n    \"zoom-out-left\",\r\n    \"zoom-out-right\"\r\n  ];\r\n  const random = Math.floor(Math.random() * fadeAnimations.length);\r\n  let animation = fadeAnimations[random];\r\n\r\n  if (numbers.length) {\r\n    let table = numbers.map((number, i) => (\r\n      <OneTicket\r\n        key={i}\r\n        coupon={number}\r\n        animation={animation}\r\n        numberOfTicket={i + 1}\r\n      />\r\n    ));\r\n\r\n    return <div className=\"main_table\">{table}</div>;\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default Tickets;\r\n","import React, {\n  Component\n} from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport NavBar from \"./components/NavBar\";\nimport Tickets from \"./components/Tickets\";\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\n\n\nconst settings = {\n  price: 1.25,\n  total: 10\n};\n\nclass App extends Component {\n  state = {\n    tableOfResult: []\n  };\n\n  handleDrawingButton = () => {\n    let amountOfCoupons = Math.floor(settings.total / settings.price);\n    let tableOfResult = [];\n    for (let i = 0; i < amountOfCoupons; i++) {\n      let z = this.drawing();\n      tableOfResult.push(z);\n    }\n    this.setState({\n      tableOfResult\n    });\n  };\n\n  drawing = () => {\n    let result = [];\n\n    function wynikLosowania() {\n      return Math.floor(Math.random() * 42 + 1);\n    }\n    while (result.length < 5) {\n      let oneDraw = wynikLosowania();\n      if (oneDraw !== result.find(el => el === oneDraw)) {\n        result.push(oneDraw);\n      }\n    }\n    return result;\n  };\n  componentDidMount() {\n    AOS.init({\n      duration: 2000\n    })\n  }\n\n\n  render() {\n    return ( <\n      >\n      <\n      Header budget = {\n        settings.total\n      }\n      /> <\n      NavBar click = {\n        this.handleDrawingButton\n      }\n      lotteryTicketPrice = {\n        settings.price\n      }\n      />\n\n      <\n      Tickets coupons = {\n        this.state.tableOfResult\n      }\n      /> < / >\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}